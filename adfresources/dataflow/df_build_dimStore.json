{
	"name": "df_build_dimStore",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "sql_stage_store",
						"type": "DatasetReference"
					},
					"name": "stageStore"
				},
				{
					"dataset": {
						"referenceName": "sql_dim_store",
						"type": "DatasetReference"
					},
					"name": "sourceDimStore"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "sql_dim_store",
						"type": "DatasetReference"
					},
					"name": "dimStore"
				}
			],
			"transformations": [
				{
					"name": "checkStoreExists"
				},
				{
					"name": "setInsertUpdateDates"
				},
				{
					"name": "UpdateOInsert"
				}
			],
			"scriptLines": [
				"source(output(",
				"          StoreName as string,",
				"          StoreType as string,",
				"          Description as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> stageStore",
				"source(output(",
				"          StoreId as integer,",
				"          StoreName as string,",
				"          StoreType as string,",
				"          Description as string,",
				"          InsertedDate as timestamp,",
				"          UpdatedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> sourceDimStore",
				"stageStore, sourceDimStore lookup(stageStore@StoreName == sourceDimStore@StoreName,",
				"     multiple: true,",
				"     broadcast: 'auto')~> checkStoreExists",
				"checkStoreExists derive(InsertedDate = iif(isNull(InsertedDate), currentTimestamp(), InsertedDate),",
				"          UpdatedDate = currentTimestamp()) ~> setInsertUpdateDates",
				"setInsertUpdateDates alterRow(upsertIf(true())) ~> UpdateOInsert",
				"UpdateOInsert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          StoreId as integer,",
				"          StoreName as string,",
				"          StoreType as string,",
				"          Description as string,",
				"          InsertedDate as timestamp,",
				"          UpdatedDate as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['StoreName'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          StoreName = stageStore@StoreName,",
				"          StoreType = stageStore@StoreType,",
				"          Description = stageStore@Description,",
				"          InsertedDate,",
				"          UpdatedDate",
				"     )) ~> dimStore"
			]
		}
	}
}